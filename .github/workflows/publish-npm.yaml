name: Publish to npm and Create GitHub Release

on:
  workflow_dispatch: # Manual trigger via GitHub UI or API

jobs:
  publish:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        # Checks out the repository code to the runner

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20' # Node.js 20 LTS
          registry-url: 'https://registry.npmjs.org' # Default registry for npm
        # Sets up Node.js environment for the workflow

      - name: Install dependencies
        run: npm ci
        # Installs dependencies using npm ci for a clean install

      - name: Build project
        run: npm run build
        # Builds the project using the build script defined in package.json

      - name: Publish to npm
        run: npm publish --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }} # Authentication for npm
        # Publishes the package to npm using the token stored in GitHub secrets

      - name: Extract version from package.json
        run: |
          VERSION=$(node -p "require('./package.json').version")
          echo "Extracted version: $VERSION" # Debugging output
          echo "VERSION=$VERSION" >> $GITHUB_ENV
        # Extracts the version from package.json and sets it in the environment

      - name: Delete existing tag if present
        run: |
          git tag -d ${{ env.VERSION }} || true
          git push origin :refs/tags/${{ env.VERSION }} || true
        # Deletes the tag locally and remotely, ignores errors if not present

      - name: npm pack
        run: npm pack # Creates a .tgz file from the package.json
        # Creates a file named came.plus-test-<version>.tgz in the current directory 

      - name: Create GitHub Release and Upload Asset
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ env.VERSION }}
          name: ${{ env.VERSION }}
          draft: false
          prerelease: false
          files: ./came.plus-test-${{ env.VERSION }}.tgz # Path to the renamed .tgz file
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # Use default GITHUB_TOKEN with updated permissions
        # Creates a GitHub release with the specified tag and uploads the packed .tgz file as an additional asset

      - name: List all files
        run: |
          echo "Listing all files in the current directory: $(pwd)"
          ls -R
        # Lists all files in the current directory
